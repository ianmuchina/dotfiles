#!/bin/bash
replace() {
  # Dynamic alias
  # Replacements For standard utilities
  command -v "$2" >/dev/null &&
    alias $1="$2"
}

replace docker podman
replace cat 'bat -p'
replace cat 'batcat -p'
replace ls exa
replace fd fdfind
# replace find fdfind

# Normal aliases
alias reload='. ~/.bashrc' # Reload bashrc
alias c='reload'           # Reload bashrc

alias l='ls --no-user --no-time --no-permissions -l '

alias html2md='pandoc -f html -t markdown'

# Change linux wallpaper

# Reload current kitty terminal
alias kr='kitty @ set-colors ~/.config/kitty/flavours.conf'
# Change Wallpaper, then change base16 theme
# fx() {
#   cd Pictures
#   fzf --preview "flavours generate -n test -a test dark {} ; flavours apply generated; xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorDP-1/workspace0/last-image -s /home/ian2/Pictures/{}; term-16-test.sh"
# }

# TODO: Convert to function

# Interactive install Package
alias inx='sudo apt install $(/bin/cat $HOME/.local/inx.txt | fzf --preview-window right --preview "apt show {} 2>/dev/null | batcat -p -l yaml --color always")'
alias inx-refresh='apt list 2>/dev/null | cut -f1 -d"/" | grep -v "Listing..." > ~/.local/inx.txt'

alias a2path='echo "export PATH=$PWD:\$PATH" >> ~/.bashrc' # Add current folder to path

alias ping='ping -c 4'      # Ping only 4 times
alias grh='history | grep ' # Grep history

alias myip='dig +short myip.opendns.com @resolver1.opendns.com -4' # get your ip

# Serve current folder on localhost
alias rbsrv='ruby -run -ehttpd . -p '
alias pysrv='python3 -m http.server'
#TODO: Add caddy & miniserve

# Boring Aliases
alias more='less'
alias grep='grep --colour=auto'
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'

alias cp="cp -i"     # Ask for confirmation before overwrites
alias df='df -h'     # Human readable
alias free='free -h' # Human readable

PREVIEW_CMD="apt show {} 2>/dev/null | batcat -p -l yaml --color always"
alias fyx='cat ~/.local/inx.txt | fzf --preview="$PREVIEW_CMD"'

# List fonts
alias fl='fc-list | cut -f2 -d ":" | sort -u | fzf'

# Youtube DL

CMD="youtube-dl"

Q_HD="720"
Q_FHD="1080"
Q_DEFAULT="$Q_HD"

command -v yt-dlp >/dev/null &&
  CMD="yt-dlp" \
    ARGS=""
# Video
ydl() {
  "$CMD" "$ARGS" \
    --no-playlist \
    --embed-subs \
    --format "[height<=$Q_DEFAULT]" \
    --output "$HOME/Videos/%(uploader)s/%(title)s.%(ext)s" "$@"
}

# Video (1080p)
yfhd() {
  "$CMD" "$ARGS" \
    --no-playlist \
    --embed-subs \
    --format "[height<=$Q_FHD]" \
    --output "$HOME/Videos/%(uploader)s/%(title)s.%(ext)s" "$@"
}

# Video (720p)
yhd() {
  "$CMD" "$ARGS" \
    --no-playlist \
    --embed-subs \
    --format "[height<=$Q_HD]" \
    --output "$HOME/Videos/%(uploader)s/%(title)s.%(ext)s" "$@"
}

# Video Playlist
ypl() {
  "$CMD" "$ARGS" \
    --yes-playlist \
    --format "[height<=$Q_DEFAULT]" \
    --output "$HOME/Videos/%(uploader)s/%(playlist)s/%(title)s.%(ext)s" "$@"
}

# Audio
ymp3() {
  "$CMD" "$ARGS" \
    --extract-audio \
    --audio-format mp3 \
    --no-playlist \
    --embed-thumbnail \
    --format "bestaudio" \
    --output "$HOME/Music/%(uploader)s/%(title)s.%(ext)s" "$@"
}

# Audio Playlist
ypl3() {
  "$CMD" "$ARGS" \
    --extract-audio \
    --audio-format mp3 \
    --yes-playlist \
    --embed-thumbnail \
    --format "bestaudio" \
    --output "$HOME/Music/%(uploader)s/%(playlist)s/%(title)s.%(ext)s" "$@"
}
