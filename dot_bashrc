#!/bin/bash
# Load aliases
if [ -f ~/.config/bash/.alias ]; then
	source ~/.config/bash/.alias
fi

# Load functions
if [ -f ~/.config/bash/.func ]; then
	source ~/.config/bash/.func
fi

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Tab Completion 
if [ -r /usr/share/bash-completion/bash_completion ]; then
	source /usr/share/bash-completion/bash_completion
fi

# Linux Binaries
export PATH=/usr/sbin:/usr/bin:/bin:/usr/local/bin:$PATH

export PATH=$HOME/.local/bin:$PATH
# Snaps
export PATH=/snap/bin:$PATH

# Golang
export PATH=~/go/bin:$PATH

# RubyGems
export PATH="$HOME/gems/bin:$PATH"

# Ruby Gems to ~/gems
export GEM_HOME="$HOME/gems"

# C Compiler FLags
export CC="clang"
export CFLAGS="-fsanitize=signed-integer-overflow -fsanitize=undefined -ggdb3 -O3 -std=c11 -Wall -Werror -Wextra -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wshadow"
export LDLIBS="-lm"

# Node.js
export PATH=/home/ian/.fnm:$PATH
command -v fnm >/dev/null && eval "$(fnm env)"

# Yarn
export PATH="$PATH:$HOME/.yarn/bin"

# Default Editor
# Vscode
#command -v code >/dev/null && export EDITOR="code --wait --new-window"
# Kakoune
#command -v kak >/dev/null && export EDITOR="kak"
# Neovim
command -v nvim >/dev/null  && export EDITOR="nvim"


# Shell Prompt
PS1="\[\e[32m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\] \[\e[36m\]\w\[\e[m\] \n\\$ "



#NOTE: I don't fully understand the code below. Got it from default ubuntu

# Change the window title of X terminals
case ${TERM} in
xterm* | rxvt* | Eterm* | aterm | kterm | gnome* | interix | konsole*)
	PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
	;;
screen*)
	PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
	;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?} # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs} ]] &&
	type -P dircolors >/dev/null &&
	match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color}; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null; then
		if [[ -f ~/.dir_colors ]]; then
			eval "$(dircolors -b ~/.dir_colors)"
		elif [[ -f /etc/DIR_COLORS ]]; then
			eval "$(dircolors -b /etc/DIR_COLORS)"
		fi
	fi

else
	if [[ ${EUID} == 0 ]]; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh

xhost +local:root >/dev/null 2>&1

complete -cf sudo

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

shopt -s expand_aliases

# export QT_SELECT=4

# Enable history appending instead of overwriting.  #139609
shopt -s histappend

# starship.rs prompt
command -v starship &>/dev/null && eval "$(starship init bash)"